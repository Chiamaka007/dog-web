import { useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import {
  useGetAllBreedsQuery,
  useGetDogsByBreedMutation,
  useGetBreedsImagesMutation,
} from "../services/api";
import { Message } from "../services/dogType";

const Home: NextPage = () => {
  const [breed, setBreed] = useState("");
  const { data, error, isLoading } = useGetAllBreedsQuery();
  const [getBreed, { data: subBreedData }] = useGetDogsByBreedMutation();
  const [breedImage, { data: imageData }] = useGetBreedsImagesMutation();

  useEffect(() => {
    if (subBreedData) console.log(subBreedData);
  }, [subBreedData]);

  useEffect(() => {
    if (imageData) console.log(imageData);
  }, [imageData]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {error ? (
          <p>Error wa o</p>
        ) : isLoading ? (
          <p>E fi le je ko load</p>
        ) : data ? (
          <select
            onChange={(e) => {
              getBreed(e.target.value);
              setBreed(e.target.value);
              breedImage({breed: e.target.value})
            }}
            className={styles.select}
          >
            <option value="">Please select a dog Breed</option>
            {Object.keys(data?.message as Message).map((item, index) => {
              return <option key={index}>{item}</option>;
            })}
          </select>
        ) : null}

        {subBreedData && subBreedData?.message?.length > 0 ? (
          <div>
            <p>Sub breed</p>
            <select
              className={styles.select}
              onChange={(e) => {
                breedImage({ breed: breed, subBreed: e.target.value });
              }}
            >
              <option>Select a sub breed</option>
              {subBreedData?.message.map((item, index) => {
                return <option>{item}</option>;
              })}
            </select>
          </div>
        ) : null}

        {imageData ?
        <img className={styles.image} src={imageData?.message[0] as string} width={500} height={400} />
        :null
      }
      </main>
    </div>
  );
};

export default Home;
